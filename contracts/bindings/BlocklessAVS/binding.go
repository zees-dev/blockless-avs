// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contractBlocklessAVS

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// BN254G1Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G1Point struct {
	X *big.Int
	Y *big.Int
}

// BN254G2Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// IBLSSignatureCheckerNonSignerStakesAndSignature is an auto generated low-level Go binding around an user-defined struct.
type IBLSSignatureCheckerNonSignerStakesAndSignature struct {
	NonSignerQuorumBitmapIndices []uint32
	NonSignerPubkeys             []BN254G1Point
	QuorumApks                   []BN254G1Point
	ApkG2                        BN254G2Point
	Sigma                        BN254G1Point
	QuorumApkIndices             []uint32
	TotalStakeIndices            []uint32
	NonSignerStakeIndices        [][]uint32
}

// IBLSSignatureCheckerQuorumStakeTotals is an auto generated low-level Go binding around an user-defined struct.
type IBLSSignatureCheckerQuorumStakeTotals struct {
	SignedStakeForQuorum []*big.Int
	TotalStakeForQuorum  []*big.Int
}

// IBlocklessAVSOraclePriceResponseMetadata is an auto generated low-level Go binding around an user-defined struct.
type IBlocklessAVSOraclePriceResponseMetadata struct {
	BlockNumber      uint32
	HashOfNonSigners [32]byte
}

// IBlocklessAVSOracleRequest is an auto generated low-level Go binding around an user-defined struct.
type IBlocklessAVSOracleRequest struct {
	Symbol                    string
	ReferenceBlockNumber      uint32
	QuorumNumbers             []byte
	QuorumThresholdPercentage uint8
}

// IBlocklessAVSPrice is an auto generated low-level Go binding around an user-defined struct.
type IBlocklessAVSPrice struct {
	Symbol    string
	Price     *big.Int
	Timestamp uint32
}

// ISignatureUtilsSignatureWithSaltAndExpiry is an auto generated low-level Go binding around an user-defined struct.
type ISignatureUtilsSignatureWithSaltAndExpiry struct {
	Signature []byte
	Salt      [32]byte
	Expiry    *big.Int
}

// ContractBlocklessAVSMetaData contains all meta data concerning the ContractBlocklessAVS contract.
var ContractBlocklessAVSMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"_avsDirectory\",\"type\":\"address\",\"internalType\":\"contractIAVSDirectory\"},{\"name\":\"_registryCoordinator\",\"type\":\"address\",\"internalType\":\"contractIRegistryCoordinator\"},{\"name\":\"_stakeRegistry\",\"type\":\"address\",\"internalType\":\"contractIStakeRegistry\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"BLOCK_STALE_MEASURE\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"aggregator\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"avsDirectory\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"blsApkRegistry\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIBLSApkRegistry\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"checkSignatures\",\"inputs\":[{\"name\":\"msgHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"quorumNumbers\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"referenceBlockNumber\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"params\",\"type\":\"tuple\",\"internalType\":\"structIBLSSignatureChecker.NonSignerStakesAndSignature\",\"components\":[{\"name\":\"nonSignerQuorumBitmapIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerPubkeys\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApks\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApkIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"totalStakeIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerStakeIndices\",\"type\":\"uint32[][]\",\"internalType\":\"uint32[][]\"}]}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"structIBLSSignatureChecker.QuorumStakeTotals\",\"components\":[{\"name\":\"signedStakeForQuorum\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"},{\"name\":\"totalStakeForQuorum\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"}]},{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"delegation\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIDelegationManager\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"deregisterOperatorFromAVS\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"freezeOperator\",\"inputs\":[{\"name\":\"operatorAddr\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"getOperatorRestakedStrategies\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address[]\",\"internalType\":\"address[]\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getRestakeableStrategies\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address[]\",\"internalType\":\"address[]\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"initialize\",\"inputs\":[{\"name\":\"_pauserRegistry\",\"type\":\"address\",\"internalType\":\"contractIPauserRegistry\"},{\"name\":\"_initialOwner\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"_aggregator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"pause\",\"inputs\":[{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"pauseAll\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"paused\",\"inputs\":[{\"name\":\"index\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"paused\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"pauserRegistry\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIPauserRegistry\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"price\",\"inputs\":[{\"name\":\"symbol\",\"type\":\"string\",\"internalType\":\"string\"}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"structIBlocklessAVS.Price\",\"components\":[{\"name\":\"symbol\",\"type\":\"string\",\"internalType\":\"string\"},{\"name\":\"price\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint32\",\"internalType\":\"uint32\"}]}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"prices\",\"inputs\":[{\"name\":\"\",\"type\":\"string\",\"internalType\":\"string\"}],\"outputs\":[{\"name\":\"symbol\",\"type\":\"string\",\"internalType\":\"string\"},{\"name\":\"price\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"registerOperatorToAVS\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"operatorSignature\",\"type\":\"tuple\",\"internalType\":\"structISignatureUtils.SignatureWithSaltAndExpiry\",\"components\":[{\"name\":\"signature\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"salt\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"expiry\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"registryCoordinator\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIRegistryCoordinator\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"renounceOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setAggregator\",\"inputs\":[{\"name\":\"_newAggregator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setPauserRegistry\",\"inputs\":[{\"name\":\"newPauserRegistry\",\"type\":\"address\",\"internalType\":\"contractIPauserRegistry\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setStaleStakesForbidden\",\"inputs\":[{\"name\":\"value\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"stakeRegistry\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIStakeRegistry\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"staleStakesForbidden\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"transferOwnership\",\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"trySignatureAndApkVerification\",\"inputs\":[{\"name\":\"msgHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"apk\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}],\"outputs\":[{\"name\":\"pairingSuccessful\",\"type\":\"bool\",\"internalType\":\"bool\"},{\"name\":\"siganatureIsValid\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"unpause\",\"inputs\":[{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"updateAVSMetadataURI\",\"inputs\":[{\"name\":\"_metadataURI\",\"type\":\"string\",\"internalType\":\"string\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"updateOraclePrice\",\"inputs\":[{\"name\":\"oracleRequest\",\"type\":\"tuple\",\"internalType\":\"structIBlocklessAVS.OracleRequest\",\"components\":[{\"name\":\"symbol\",\"type\":\"string\",\"internalType\":\"string\"},{\"name\":\"referenceBlockNumber\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"quorumNumbers\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"quorumThresholdPercentage\",\"type\":\"uint8\",\"internalType\":\"uint8\"}]},{\"name\":\"priceResponse\",\"type\":\"tuple\",\"internalType\":\"structIBlocklessAVS.Price\",\"components\":[{\"name\":\"symbol\",\"type\":\"string\",\"internalType\":\"string\"},{\"name\":\"price\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint32\",\"internalType\":\"uint32\"}]},{\"name\":\"nonSignerStakesAndSignature\",\"type\":\"tuple\",\"internalType\":\"structIBLSSignatureChecker.NonSignerStakesAndSignature\",\"components\":[{\"name\":\"nonSignerQuorumBitmapIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerPubkeys\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApks\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApkIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"totalStakeIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerStakeIndices\",\"type\":\"uint32[][]\",\"internalType\":\"uint32[][]\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"event\",\"name\":\"AggregatorUpdated\",\"inputs\":[{\"name\":\"previousAggregator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newAggregator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"Initialized\",\"inputs\":[{\"name\":\"version\",\"type\":\"uint8\",\"indexed\":false,\"internalType\":\"uint8\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OracleUpdate\",\"inputs\":[{\"name\":\"priceResponse\",\"type\":\"tuple\",\"indexed\":false,\"internalType\":\"structIBlocklessAVS.Price\",\"components\":[{\"name\":\"symbol\",\"type\":\"string\",\"internalType\":\"string\"},{\"name\":\"price\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint32\",\"internalType\":\"uint32\"}]},{\"name\":\"oraclePriceResponseMetadata\",\"type\":\"tuple\",\"indexed\":false,\"internalType\":\"structIBlocklessAVS.OraclePriceResponseMetadata\",\"components\":[{\"name\":\"blockNumber\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"hashOfNonSigners\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}]}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"Paused\",\"inputs\":[{\"name\":\"account\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"PauserRegistrySet\",\"inputs\":[{\"name\":\"pauserRegistry\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"contractIPauserRegistry\"},{\"name\":\"newPauserRegistry\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"contractIPauserRegistry\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"StaleStakesForbiddenUpdate\",\"inputs\":[{\"name\":\"value\",\"type\":\"bool\",\"indexed\":false,\"internalType\":\"bool\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"Unpaused\",\"inputs\":[{\"name\":\"account\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newPausedStatus\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false}]",
	Bin: "0x6101606040523480156200001257600080fd5b5060405162005450380380620054508339810160408190526200003591620002da565b6001600160a01b0380841660c052808316608052811660a052818381836200005c620001ff565b5050506001600160a01b03811660e081905260408051636830483560e01b815290516368304835916004808201926020929091908290030181865afa158015620000aa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000d091906200032e565b6001600160a01b0316610100816001600160a01b031681525050806001600160a01b0316635df459466040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000129573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200014f91906200032e565b6001600160a01b0316610120816001600160a01b031681525050610100516001600160a01b031663df5cf7236040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001d191906200032e565b6001600160a01b031661014052506097805460ff19166001179055620001f6620001ff565b50505062000355565b600054610100900460ff16156200026c5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015620002bf576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b0381168114620002d757600080fd5b50565b600080600060608486031215620002f057600080fd5b8351620002fd81620002c1565b60208501519093506200031081620002c1565b60408501519092506200032381620002c1565b809150509250925092565b6000602082840312156200034157600080fd5b81516200034e81620002c1565b9392505050565b60805160a05160c05160e0516101005161012051610140516150066200044a600039600081816104a101526116f601526000818161030e01526118d801526000818161035201528181611aae0152611c7001526000818161039f01528181610dd4015281816113c101528181611559015261179301526000818161037601528181611f980152818161206c01526124d7015260008181610aa301528181610bfe01528181610c95015281816127f90152818161297c0152612a1b0152600081816108ce0152818161095d015281816109dd01528181611f44015281816120100152818161273701526128d701526150066000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c8063715018a61161010f578063c0c53b8b116100a2578063f2fde38b11610071578063f2fde38b146104cb578063f9120af6146104de578063fabc1cbc146104f1578063fe2c61981461050457600080fd5b8063c0c53b8b14610467578063c3825f4b1461047a578063df5cf7231461049c578063e481af9d146104c357600080fd5b8063a364f4da116100de578063a364f4da14610421578063a68b0f7c14610434578063a98fb35514610447578063b98d09081461045a57600080fd5b8063715018a6146103e2578063886f1195146103ea5780638da5cb5b146103fd5780639926ee7d1461040e57600080fd5b80635ac86ab7116101875780636830483511610156578063683048351461034d5780636b3aa72e146103745780636d14a9871461039a5780636efb4636146103c157600080fd5b80635ac86ab7146102c55780635c975abb146102f85780635df45946146103095780635e8b3f2d1461033057600080fd5b806333cfb7b7116101c357806333cfb7b71461027757806338c8ee6414610297578063416c7e5e146102aa578063595c6a67146102bd57600080fd5b806310d67a2f146101f5578063136439dd1461020a578063171f1d5b1461021d578063245a7bfc1461024c575b600080fd5b610208610203366004613e66565b610524565b005b610208610218366004613e83565b6105e0565b61023061022b36600461400f565b61071f565b6040805192151583529015156020830152015b60405180910390f35b60fb5461025f906001600160a01b031681565b6040516001600160a01b039091168152602001610243565b61028a610285366004613e66565b6108a9565b6040516102439190614060565b6102086102a5366004613e66565b610d78565b6102086102b83660046140bb565b610dd2565b610208610f47565b6102e86102d33660046140e7565b60ca54600160ff9092169190911b9081161490565b6040519015158152602001610243565b60ca54604051908152602001610243565b61025f7f000000000000000000000000000000000000000000000000000000000000000081565b610338609681565b60405163ffffffff9091168152602001610243565b61025f7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000061025f565b61025f7f000000000000000000000000000000000000000000000000000000000000000081565b6103d46103cf36600461440d565b61100e565b6040516102439291906144d8565b610208611f25565b60c95461025f906001600160a01b031681565b6033546001600160a01b031661025f565b61020861041c366004614578565b611f39565b61020861042f366004613e66565b612005565b610208610442366004614622565b6120cc565b6102086104553660046146c1565b6124b8565b6097546102e89060ff1681565b610208610475366004614711565b61250c565b61048d6104883660046146c1565b612675565b6040516102439392919061479e565b61025f7f000000000000000000000000000000000000000000000000000000000000000081565b61028a612731565b6102086104d9366004613e66565b612afa565b6102086104ec366004613e66565b612b70565b6102086104ff366004613e83565b612bca565b6105176105123660046147cd565b612d26565b604051610243919061480e565b60c960009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610577573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059b9190614850565b6001600160a01b0316336001600160a01b0316146105d45760405162461bcd60e51b81526004016105cb9061486d565b60405180910390fd5b6105dd81612e31565b50565b60c95460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015610628573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064c91906148b7565b6106685760405162461bcd60e51b81526004016105cb906148d4565b60ca54818116146106e15760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c697479000000000000000060648201526084016105cb565b60ca81905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b60008060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001878760000151886020015188600001516000600281106107675761076761491c565b60200201518951600160200201518a6020015160006002811061078c5761078c61491c565b60200201518b602001516001600281106107a8576107a861491c565b602090810291909101518c518d8301516040516108059a99989796959401988952602089019790975260408801959095526060870193909352608086019190915260a085015260c084015260e08301526101008201526101200190565b6040516020818303038152906040528051906020012060001c6108289190614932565b905061089b61084161083a8884612f28565b8690612fbf565b610849613053565b6108916108828561087c604080518082018252600080825260209182015281518083019092526001825260029082015290565b90612f28565b61088b8c613113565b90612fbf565b886201d4c06131a3565b909890975095505050505050565b6040516309aa152760e11b81526001600160a01b0382811660048301526060916000917f000000000000000000000000000000000000000000000000000000000000000016906313542a4e90602401602060405180830381865afa158015610915573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109399190614954565b60405163871ef04960e01b8152600481018290529091506000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063871ef04990602401602060405180830381865afa1580156109a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c8919061496d565b90506001600160c01b0381161580610a6257507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639aa1653d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5d9190614996565b60ff16155b15610a7e57505060408051600081526020810190915292915050565b6000610a92826001600160c01b03166133c7565b90506000805b8251811015610b68577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633ca5a5f5848381518110610ae257610ae261491c565b01602001516040516001600160e01b031960e084901b16815260f89190911c6004820152602401602060405180830381865afa158015610b26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4a9190614954565b610b5490836149c9565b915080610b60816149e1565b915050610a98565b506000816001600160401b03811115610b8357610b83613e9c565b604051908082528060200260200182016040528015610bac578160200160208202803683370190505b5090506000805b8451811015610d6b576000858281518110610bd057610bd061491c565b0160200151604051633ca5a5f560e01b815260f89190911c6004820181905291506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633ca5a5f590602401602060405180830381865afa158015610c45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c699190614954565b905060005b81811015610d55576040516356e4026d60e11b815260ff84166004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063adc804da906044016040805180830381865afa158015610ce3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d079190614a13565b60000151868681518110610d1d57610d1d61491c565b6001600160a01b039092166020928302919091019091015284610d3f816149e1565b9550508080610d4d906149e1565b915050610c6e565b5050508080610d63906149e1565b915050610bb3565b5090979650505050505050565b60fb546001600160a01b031633146105dd5760405162461bcd60e51b815260206004820152601d60248201527f41676772656761746f72206d757374206265207468652063616c6c657200000060448201526064016105cb565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e549190614850565b6001600160a01b0316336001600160a01b031614610f005760405162461bcd60e51b815260206004820152605c60248201527f424c535369676e6174757265436865636b65722e6f6e6c79436f6f7264696e6160448201527f746f724f776e65723a2063616c6c6572206973206e6f7420746865206f776e6560648201527f72206f6620746865207265676973747279436f6f7264696e61746f7200000000608482015260a4016105cb565b6097805460ff19168215159081179091556040519081527f40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc9060200160405180910390a150565b60c95460405163237dfb4760e11b81523360048201526001600160a01b03909116906346fbf68e90602401602060405180830381865afa158015610f8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb391906148b7565b610fcf5760405162461bcd60e51b81526004016105cb906148d4565b60001960ca81905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2565b60408051808201909152606080825260208201526000846110855760405162461bcd60e51b81526020600482015260376024820152600080516020614fb183398151915260448201527f7265733a20656d7074792071756f72756d20696e70757400000000000000000060648201526084016105cb565b6040830151518514801561109d575060a08301515185145b80156110ad575060c08301515185145b80156110bd575060e08301515185145b6111275760405162461bcd60e51b81526020600482015260416024820152600080516020614fb183398151915260448201527f7265733a20696e7075742071756f72756d206c656e677468206d69736d6174636064820152600d60fb1b608482015260a4016105cb565b8251516020840151511461119f5760405162461bcd60e51b815260206004820152604460248201819052600080516020614fb1833981519152908201527f7265733a20696e707574206e6f6e7369676e6572206c656e677468206d69736d6064820152630c2e8c6d60e31b608482015260a4016105cb565b4363ffffffff168463ffffffff161061120e5760405162461bcd60e51b815260206004820152603c6024820152600080516020614fb183398151915260448201527f7265733a20696e76616c6964207265666572656e636520626c6f636b0000000060648201526084016105cb565b6040805180820182526000808252602080830191909152825180840190935260608084529083015290866001600160401b0381111561124f5761124f613e9c565b604051908082528060200260200182016040528015611278578160200160208202803683370190505b506020820152866001600160401b0381111561129657611296613e9c565b6040519080825280602002602001820160405280156112bf578160200160208202803683370190505b50815260408051808201909152606080825260208201528560200151516001600160401b038111156112f3576112f3613e9c565b60405190808252806020026020018201604052801561131c578160200160208202803683370190505b5081526020860151516001600160401b0381111561133c5761133c613e9c565b604051908082528060200260200182016040528015611365578160200160208202803683370190505b50816020018190525060006114378a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505060408051639aa1653d60e01b815290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169350639aa1653d925060048083019260209291908290030181865afa15801561140e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114329190614996565b613489565b905060005b8760200151518110156116d257611481886020015182815181106114625761146261491c565b6020026020010151805160009081526020918201519091526040902090565b836020015182815181106114975761149761491c565b602090810291909101015280156115575760208301516114b8600183614a52565b815181106114c8576114c861491c565b602002602001015160001c836020015182815181106114e9576114e961491c565b602002602001015160001c11611557576040805162461bcd60e51b8152602060048201526024810191909152600080516020614fb183398151915260448201527f7265733a206e6f6e5369676e65725075626b657973206e6f7420736f7274656460648201526084016105cb565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166304ec63518460200151838151811061159c5761159c61491c565b60200260200101518b8b6000015185815181106115bb576115bb61491c565b60200260200101516040518463ffffffff1660e01b81526004016115f89392919092835263ffffffff918216602084015216604082015260600190565b602060405180830381865afa158015611615573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611639919061496d565b6001600160c01b0316836000015182815181106116585761165861491c565b6020026020010181815250506116be61083a61169284866000015185815181106116845761168461491c565b60200260200101511661351a565b8a6020015184815181106116a8576116a861491c565b602002602001015161354590919063ffffffff16565b9450806116ca816149e1565b91505061143c565b50506116dd83613629565b60975490935060ff166000816116f4576000611776565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c448feb86040518163ffffffff1660e01b8152600401602060405180830381865afa158015611752573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117769190614954565b905060005b8a811015611df45782156118d6578963ffffffff16827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663249a0c428f8f868181106117d2576117d261491c565b60405160e085901b6001600160e01b031916815292013560f81c600483015250602401602060405180830381865afa158015611812573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118369190614954565b61184091906149c9565b116118d65760405162461bcd60e51b81526020600482015260666024820152600080516020614fb183398151915260448201527f7265733a205374616b6552656769737472792075706461746573206d7573742060648201527f62652077697468696e207769746864726177616c44656c6179426c6f636b732060848201526577696e646f7760d01b60a482015260c4016105cb565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166368bccaac8d8d848181106119175761191761491c565b9050013560f81c60f81b60f81c8c8c60a00151858151811061193b5761193b61491c565b60209081029190910101516040516001600160e01b031960e086901b16815260ff909316600484015263ffffffff9182166024840152166044820152606401602060405180830381865afa158015611997573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119bb9190614a69565b6001600160401b0319166119de8a6040015183815181106114625761146261491c565b67ffffffffffffffff191614611a7a5760405162461bcd60e51b81526020600482015260616024820152600080516020614fb183398151915260448201527f7265733a2071756f72756d41706b206861736820696e2073746f72616765206460648201527f6f6573206e6f74206d617463682070726f76696465642071756f72756d2061706084820152606b60f81b60a482015260c4016105cb565b611aaa89604001518281518110611a9357611a9361491c565b602002602001015187612fbf90919063ffffffff16565b95507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c8294c568d8d84818110611aed57611aed61491c565b9050013560f81c60f81b60f81c8c8c60c001518581518110611b1157611b1161491c565b60209081029190910101516040516001600160e01b031960e086901b16815260ff909316600484015263ffffffff9182166024840152166044820152606401602060405180830381865afa158015611b6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b919190614a94565b85602001518281518110611ba757611ba761491c565b6001600160601b03909216602092830291909101820152850151805182908110611bd357611bd361491c565b602002602001015185600001518281518110611bf157611bf161491c565b60200260200101906001600160601b031690816001600160601b0316815250506000805b8a6020015151811015611ddf57611c6986600001518281518110611c3b57611c3b61491c565b60200260200101518f8f86818110611c5557611c5561491c565b600192013560f81c9290921c811614919050565b15611dcd577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f2be94ae8f8f86818110611caf57611caf61491c565b9050013560f81c60f81b60f81c8e89602001518581518110611cd357611cd361491c565b60200260200101518f60e001518881518110611cf157611cf161491c565b60200260200101518781518110611d0a57611d0a61491c565b60209081029190910101516040516001600160e01b031960e087901b16815260ff909416600485015263ffffffff92831660248501526044840191909152166064820152608401602060405180830381865afa158015611d6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d929190614a94565b8751805185908110611da657611da661491c565b60200260200101818151611dba9190614aaf565b6001600160601b03169052506001909101905b80611dd7816149e1565b915050611c15565b50508080611dec906149e1565b91505061177b565b505050600080611e0e8c868a606001518b6080015161071f565b9150915081611e7f5760405162461bcd60e51b81526020600482015260436024820152600080516020614fb183398151915260448201527f7265733a2070616972696e6720707265636f6d70696c652063616c6c206661696064820152621b195960ea1b608482015260a4016105cb565b80611ee05760405162461bcd60e51b81526020600482015260396024820152600080516020614fb183398151915260448201527f7265733a207369676e617475726520697320696e76616c69640000000000000060648201526084016105cb565b50506000878260200151604051602001611efb929190614ad7565b60408051808303601f190181529190528051602090910120929b929a509198505050505050505050565b611f2d6136c4565b611f37600061371e565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611f815760405162461bcd60e51b81526004016105cb90614b1f565b604051639926ee7d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639926ee7d90611fcf9085908590600401614b97565b600060405180830381600087803b158015611fe957600080fd5b505af1158015611ffd573d6000803e3d6000fd5b505050505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461204d5760405162461bcd60e51b81526004016105cb90614b1f565b6040516351b27a6d60e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063a364f4da906024015b600060405180830381600087803b1580156120b157600080fd5b505af11580156120c5573d6000803e3d6000fd5b5050505050565b60fb546001600160a01b031633146121265760405162461bcd60e51b815260206004820152601d60248201527f41676772656761746f72206d757374206265207468652063616c6c657200000060448201526064016105cb565b63ffffffff431661213d6040850160208601614be2565b63ffffffff1611156121cb5760405162461bcd60e51b815260206004820152604b60248201527f426c6f636b6c6573734156532e7570646174654f7261636c6550726963653a2060448201527f737065636966696564207265666572656e6365426c6f636b4e756d626572206960648201526a7320696e2066757475726560a81b608482015260a4016105cb565b63ffffffff431660966121e46040860160208701614be2565b6121ee9190614bff565b63ffffffff1610156122825760405162461bcd60e51b815260206004820152605160248201527f426c6f636b6c6573734156532e7570646174654f7261636c6550726963653a2060448201527f737065636966696564207265666572656e6365426c6f636b4e756d62657220696064820152701cc81d1bdbc819985c881a5b881c185cdd607a1b608482015260a4016105cb565b6000826040516020016122959190614cba565b6040516020818303038152906040528051906020012090506000806122dd838780604001906122c49190614ccd565b6122d460408b0160208c01614be2565b6103cf89614d13565b9150915060005b6122f16040880188614ccd565b905081101561241d5761230a60808801606089016140e7565b60ff16836020015182815181106123235761232361491c565b60200260200101516123359190614d1f565b6001600160601b03166064846000015183815181106123565761235661491c565b60200260200101516001600160601b03166123719190614d4e565b101561240b5760405162461bcd60e51b815260206004820152606060248201527f426c6f636b6c6573734156532e7570646174654f7261636c6550726963653a2060448201527f7369676e61746f7269657320646f206e6f74206f776e206174206c656173742060648201527f7468726573686f6c642070657263656e74616765206f6620612071756f72756d608482015260a4016105cb565b80612415816149e1565b9150506122e4565b5061242785613770565b8460fc6124348280614ccd565b604051612442929190614d6d565b90815260405190819003602001902061245b8282614e0b565b505060408051808201825263ffffffff431681526020810183905290517fb87b504d9a6e5fc52f4f36a7cfc9c4eeeadeb4850d6155226e8b99d69fc11fd5906124a79088908490614f28565b60405180910390a150505050505050565b6124c06136c4565b60405163a98fb35560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a98fb35590612097908490600401614f5b565b600054610100900460ff161580801561252c5750600054600160ff909116105b806125465750303b158015612546575060005460ff166001145b6125a95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105cb565b6000805460ff1916600117905580156125cc576000805461ff0019166101001790555b6125d58361371e565b6125e08460006139d6565b60fb80546001600160a01b0319166001600160a01b0384169081179091556040516000907f89baabef7dfd0683c0ac16fd2a8431c51b49fbe654c3f7b5ef19763e2ccd88f2908290a3801561266f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b805160208183018101805160fc8252928201919093012091528054819061269b90614d7d565b80601f01602080910402602001604051908101604052809291908181526020018280546126c790614d7d565b80156127145780601f106126e957610100808354040283529160200191612714565b820191906000526020600020905b8154815290600101906020018083116126f757829003601f168201915b50505050600183015460029093015491929163ffffffff16905083565b606060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639aa1653d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612793573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127b79190614996565b60ff169050806127d557505060408051600081526020810190915290565b6000805b8281101561288a57604051633ca5a5f560e01b815260ff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633ca5a5f590602401602060405180830381865afa158015612848573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061286c9190614954565b61287690836149c9565b915080612882816149e1565b9150506127d9565b506000816001600160401b038111156128a5576128a5613e9c565b6040519080825280602002602001820160405280156128ce578160200160208202803683370190505b5090506000805b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639aa1653d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612933573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129579190614996565b60ff16811015612af057604051633ca5a5f560e01b815260ff821660048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633ca5a5f590602401602060405180830381865afa1580156129cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129ef9190614954565b905060005b81811015612adb576040516356e4026d60e11b815260ff84166004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063adc804da906044016040805180830381865afa158015612a69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a8d9190614a13565b60000151858581518110612aa357612aa361491c565b6001600160a01b039092166020928302919091019091015283612ac5816149e1565b9450508080612ad3906149e1565b9150506129f4565b50508080612ae8906149e1565b9150506128d5565b5090949350505050565b612b026136c4565b6001600160a01b038116612b675760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105cb565b6105dd8161371e565b612b786136c4565b60fb80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f89baabef7dfd0683c0ac16fd2a8431c51b49fbe654c3f7b5ef19763e2ccd88f290600090a35050565b60c960009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612c1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c419190614850565b6001600160a01b0316336001600160a01b031614612c715760405162461bcd60e51b81526004016105cb9061486d565b60ca5419811960ca54191614612cef5760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c697479000000000000000060648201526084016105cb565b60ca81905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c90602001610714565b612d5060405180606001604052806060815260200160008152602001600063ffffffff1681525090565b60fc8383604051612d62929190614d6d565b9081526020016040518091039020604051806060016040529081600082018054612d8b90614d7d565b80601f0160208091040260200160405190810160405280929190818152602001828054612db790614d7d565b8015612e045780601f10612dd957610100808354040283529160200191612e04565b820191906000526020600020905b815481529060010190602001808311612de757829003601f168201915b50505091835250506001820154602082015260029091015463ffffffff1660409091015290505b92915050565b6001600160a01b038116612ebf5760405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a4016105cb565b60c954604080516001600160a01b03928316815291831660208301527f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6910160405180910390a160c980546001600160a01b0319166001600160a01b0392909216919091179055565b6040805180820190915260008082526020820152612f44613d77565b835181526020808501519082015260408082018490526000908360608460076107d05a03fa9050808015612f7757612f79565bfe5b5080612fb75760405162461bcd60e51b815260206004820152600d60248201526c1958cb5b5d5b0b59985a5b1959609a1b60448201526064016105cb565b505092915050565b6040805180820190915260008082526020820152612fdb613d95565b835181526020808501518183015283516040808401919091529084015160608301526000908360808460066107d05a03fa9050808015612f77575080612fb75760405162461bcd60e51b815260206004820152600d60248201526c1958cb5859190b59985a5b1959609a1b60448201526064016105cb565b61305b613db3565b50604080516080810182527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28183019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6060830152815281518083019092527f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec82527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d60208381019190915281019190915290565b604080518082019091526000808252602082015260008080613143600080516020614f9183398151915286614932565b90505b61314f81613ac0565b9093509150600080516020614f91833981519152828309831415613189576040805180820190915290815260208101919091529392505050565b600080516020614f91833981519152600182089050613146565b6040805180820182528681526020808201869052825180840190935286835282018490526000918291906131d5613dd8565b60005b600281101561339a5760006131ee826006614d4e565b90508482600281106132025761320261491c565b602002015151836132148360006149c9565b600c81106132245761322461491c565b602002015284826002811061323b5761323b61491c565b6020020151602001518382600161325291906149c9565b600c81106132625761326261491c565b60200201528382600281106132795761327961491c565b602002015151518361328c8360026149c9565b600c811061329c5761329c61491c565b60200201528382600281106132b3576132b361491c565b60200201515160016020020151836132cc8360036149c9565b600c81106132dc576132dc61491c565b60200201528382600281106132f3576132f361491c565b60200201516020015160006002811061330e5761330e61491c565b60200201518361331f8360046149c9565b600c811061332f5761332f61491c565b60200201528382600281106133465761334661491c565b6020020151602001516001600281106133615761336161491c565b6020020151836133728360056149c9565b600c81106133825761338261491c565b60200201525080613392816149e1565b9150506131d8565b506133a3613df7565b60006020826101808560088cfa9151919c9115159b50909950505050505050505050565b60606000806133d58461351a565b61ffff166001600160401b038111156133f0576133f0613e9c565b6040519080825280601f01601f19166020018201604052801561341a576020820181803683370190505b5090506000805b825182108015613432575061010081105b15612af0576001811b935085841615613479578060f81b83838151811061345b5761345b61491c565b60200101906001600160f81b031916908160001a9053508160010191505b613482816149e1565b9050613421565b60008061349584613b42565b9050808360ff166001901b116135135760405162461bcd60e51b815260206004820152603f60248201527f4269746d61705574696c732e6f72646572656442797465734172726179546f4260448201527f69746d61703a206269746d61702065786365656473206d61782076616c75650060648201526084016105cb565b9392505050565b6000805b8215612e2b5761352f600184614a52565b909216918061353d81614f6e565b91505061351e565b60408051808201909152600080825260208201526102008261ffff16106135a15760405162461bcd60e51b815260206004820152601060248201526f7363616c61722d746f6f2d6c6172676560801b60448201526064016105cb565b8161ffff16600114156135b5575081612e2b565b6040805180820190915260008082526020820181905284906001905b8161ffff168661ffff161061361e57600161ffff871660ff83161c81161415613601576135fe8484612fbf565b93505b61360b8384612fbf565b92506201fffe600192831b1691016135d1565b509195945050505050565b6040805180820190915260008082526020820152815115801561364e57506020820151155b1561366c575050604080518082019091526000808252602082015290565b604051806040016040528083600001518152602001600080516020614f91833981519152846020015161369f9190614932565b6136b790600080516020614f91833981519152614a52565b905292915050565b919050565b6033546001600160a01b03163314611f375760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105cb565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008160200135116137dd5760405162461bcd60e51b815260206004820152603060248201527f426c6f636b6c6573734156532e75706461746550726963653a2070726963652060448201526f6d75737420626520706f73697469766560801b60648201526084016105cb565b426137ee6060830160408401614be2565b63ffffffff1611156138685760405162461bcd60e51b815260206004820152603b60248201527f426c6f636b6c6573734156532e75706461746550726963653a2074696d65737460448201527f616d702063616e6e6f7420626520696e2074686520667574757265000000000060648201526084016105cb565b603c6138748142614a52565b6138846060840160408501614be2565b63ffffffff1610156138fe5760405162461bcd60e51b815260206004820152603760248201527f426c6f636b6c6573734156532e75706461746550726963653a2074696d65737460448201527f616d70206f7574736964652076616c69642072616e676500000000000000000060648201526084016105cb565b600060fc61390c8480614ccd565b60405161391a929190614d6d565b90815260405190819003602001902090506139358242614a52565b600282015463ffffffff16108061395457508260200135816001015414155b6139d15760405162461bcd60e51b815260206004820152604260248201527f426c6f636b6c6573734156532e75706461746550726963653a2070726963652060448201527f616c726561647920757064617465642077697468696e2074696d652077696e646064820152616f7760f01b608482015260a4016105cb565b505050565b60c9546001600160a01b03161580156139f757506001600160a01b03821615155b613a795760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a4016105cb565b60ca81905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2613abc82612e31565b5050565b60008080600080516020614f918339815191526003600080516020614f9183398151915286600080516020614f91833981519152888909090890506000613b36827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f52600080516020614f91833981519152613ccf565b91959194509092505050565b600061010082511115613bcb5760405162461bcd60e51b8152602060048201526044602482018190527f4269746d61705574696c732e6f72646572656442797465734172726179546f42908201527f69746d61703a206f7264657265644279746573417272617920697320746f6f206064820152636c6f6e6760e01b608482015260a4016105cb565b8151613bd957506000919050565b60008083600081518110613bef57613bef61491c565b0160200151600160f89190911c81901b92505b8451811015613cc657848181518110613c1d57613c1d61491c565b0160200151600160f89190911c1b9150828211613cb25760405162461bcd60e51b815260206004820152604760248201527f4269746d61705574696c732e6f72646572656442797465734172726179546f4260448201527f69746d61703a206f72646572656442797465734172726179206973206e6f74206064820152661bdc99195c995960ca1b608482015260a4016105cb565b91811791613cbf816149e1565b9050613c02565b50909392505050565b600080613cda613df7565b613ce2613e15565b602080825281810181905260408201819052606082018890526080820187905260a082018690528260c08360056107d05a03fa9250828015612f77575082613d6c5760405162461bcd60e51b815260206004820152601a60248201527f424e3235342e6578704d6f643a2063616c6c206661696c75726500000000000060448201526064016105cb565b505195945050505050565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b6040518060400160405280613dc6613e33565b8152602001613dd3613e33565b905290565b604051806101800160405280600c906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060c001604052806006906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b6001600160a01b03811681146105dd57600080fd5b600060208284031215613e7857600080fd5b813561351381613e51565b600060208284031215613e9557600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715613ed457613ed4613e9c565b60405290565b60405161010081016001600160401b0381118282101715613ed457613ed4613e9c565b604051606081016001600160401b0381118282101715613ed457613ed4613e9c565b604051601f8201601f191681016001600160401b0381118282101715613f4757613f47613e9c565b604052919050565b600060408284031215613f6157600080fd5b613f69613eb2565b9050813581526020820135602082015292915050565b600082601f830112613f9057600080fd5b613f98613eb2565b806040840185811115613faa57600080fd5b845b81811015613fc4578035845260209384019301613fac565b509095945050505050565b600060808284031215613fe157600080fd5b613fe9613eb2565b9050613ff58383613f7f565b81526140048360408401613f7f565b602082015292915050565b600080600080610120858703121561402657600080fd5b843593506140378660208701613f4f565b92506140468660608701613fcf565b91506140558660e08701613f4f565b905092959194509250565b6020808252825182820181905260009190848201906040850190845b818110156140a15783516001600160a01b03168352928401929184019160010161407c565b50909695505050505050565b80151581146105dd57600080fd5b6000602082840312156140cd57600080fd5b8135613513816140ad565b60ff811681146105dd57600080fd5b6000602082840312156140f957600080fd5b8135613513816140d8565b60008083601f84011261411657600080fd5b5081356001600160401b0381111561412d57600080fd5b60208301915083602082850101111561414557600080fd5b9250929050565b63ffffffff811681146105dd57600080fd5b80356136bf8161414c565b60006001600160401b0382111561418257614182613e9c565b5060051b60200190565b600082601f83011261419d57600080fd5b813560206141b26141ad83614169565b613f1f565b82815260059290921b840181019181810190868411156141d157600080fd5b8286015b848110156141f55780356141e88161414c565b83529183019183016141d5565b509695505050505050565b600082601f83011261421157600080fd5b813560206142216141ad83614169565b82815260069290921b8401810191818101908684111561424057600080fd5b8286015b848110156141f5576142568882613f4f565b835291830191604001614244565b600082601f83011261427557600080fd5b813560206142856141ad83614169565b82815260059290921b840181019181810190868411156142a457600080fd5b8286015b848110156141f55780356001600160401b038111156142c75760008081fd5b6142d58986838b010161418c565b8452509183019183016142a8565b600061018082840312156142f657600080fd5b6142fe613eda565b905081356001600160401b038082111561431757600080fd5b6143238583860161418c565b8352602084013591508082111561433957600080fd5b61434585838601614200565b6020840152604084013591508082111561435e57600080fd5b61436a85838601614200565b604084015261437c8560608601613fcf565b606084015261438e8560e08601613f4f565b60808401526101208401359150808211156143a857600080fd5b6143b48583860161418c565b60a08401526101408401359150808211156143ce57600080fd5b6143da8583860161418c565b60c08401526101608401359150808211156143f457600080fd5b5061440184828501614264565b60e08301525092915050565b60008060008060006080868803121561442557600080fd5b8535945060208601356001600160401b038082111561444357600080fd5b61444f89838a01614104565b9096509450604088013591506144648261414c565b9092506060870135908082111561447a57600080fd5b50614487888289016142e3565b9150509295509295909350565b600081518084526020808501945080840160005b838110156144cd5781516001600160601b0316875295820195908201906001016144a8565b509495945050505050565b60408152600083516040808401526144f36080840182614494565b90506020850151603f198483030160608501526145108282614494565b925050508260208301529392505050565b60006001600160401b0383111561453a5761453a613e9c565b61454d601f8401601f1916602001613f1f565b905082815283838301111561456157600080fd5b828260208301376000602084830101529392505050565b6000806040838503121561458b57600080fd5b823561459681613e51565b915060208301356001600160401b03808211156145b257600080fd5b90840190606082870312156145c657600080fd5b6145ce613efd565b8235828111156145dd57600080fd5b83019150601f820187136145f057600080fd5b6145ff87833560208501614521565b815260208301356020820152604083013560408201528093505050509250929050565b60008060006060848603121561463757600080fd5b83356001600160401b038082111561464e57600080fd5b908501906080828803121561466257600080fd5b9093506020850135908082111561467857600080fd5b908501906060828803121561468c57600080fd5b909250604085013590808211156146a257600080fd5b50840161018081870312156146b657600080fd5b809150509250925092565b6000602082840312156146d357600080fd5b81356001600160401b038111156146e957600080fd5b8201601f810184136146fa57600080fd5b61470984823560208401614521565b949350505050565b60008060006060848603121561472657600080fd5b833561473181613e51565b9250602084013561474181613e51565b915060408401356146b681613e51565b6000815180845260005b818110156147775760208185018101518683018201520161475b565b81811115614789576000602083870101525b50601f01601f19169290920160200192915050565b6060815260006147b16060830186614751565b905083602083015263ffffffff83166040830152949350505050565b600080602083850312156147e057600080fd5b82356001600160401b038111156147f657600080fd5b61480285828601614104565b90969095509350505050565b60208152600082516060602084015261482a6080840182614751565b90506020840151604084015263ffffffff60408501511660608401528091505092915050565b60006020828403121561486257600080fd5b815161351381613e51565b6020808252602a908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526939903ab73830bab9b2b960b11b606082015260800190565b6000602082840312156148c957600080fd5b8151613513816140ad565b60208082526028908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526739903830bab9b2b960c11b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60008261494f57634e487b7160e01b600052601260045260246000fd5b500690565b60006020828403121561496657600080fd5b5051919050565b60006020828403121561497f57600080fd5b81516001600160c01b038116811461351357600080fd5b6000602082840312156149a857600080fd5b8151613513816140d8565b634e487b7160e01b600052601160045260246000fd5b600082198211156149dc576149dc6149b3565b500190565b60006000198214156149f5576149f56149b3565b5060010190565b80516001600160601b03811681146136bf57600080fd5b600060408284031215614a2557600080fd5b614a2d613eb2565b8251614a3881613e51565b8152614a46602084016149fc565b60208201529392505050565b600082821015614a6457614a646149b3565b500390565b600060208284031215614a7b57600080fd5b815167ffffffffffffffff198116811461351357600080fd5b600060208284031215614aa657600080fd5b613513826149fc565b60006001600160601b0383811690831681811015614acf57614acf6149b3565b039392505050565b63ffffffff60e01b8360e01b1681526000600482018351602080860160005b83811015614b1257815185529382019390820190600101614af6565b5092979650505050505050565b60208082526052908201527f536572766963654d616e61676572426173652e6f6e6c7952656769737472794360408201527f6f6f7264696e61746f723a2063616c6c6572206973206e6f742074686520726560608201527133b4b9ba393c9031b7b7b93234b730ba37b960711b608082015260a00190565b60018060a01b0383168152604060208201526000825160606040840152614bc160a0840182614751565b90506020840151606084015260408401516080840152809150509392505050565b600060208284031215614bf457600080fd5b81356135138161414c565b600063ffffffff808316818516808303821115614c1e57614c1e6149b3565b01949350505050565b60008135601e19833603018112614c3d57600080fd5b820180356001600160401b03811115614c5557600080fd5b803603841315614c6457600080fd5b606085528060608601528060208301608087013760006080828701015260208401356020860152614c976040850161415e565b63ffffffff811660408701529150601f01601f1916939093016080019392505050565b6020815260006135136020830184614c27565b6000808335601e19843603018112614ce457600080fd5b8301803591506001600160401b03821115614cfe57600080fd5b60200191503681900382131561414557600080fd5b6000612e2b36836142e3565b60006001600160601b0380831681851681830481118215151615614d4557614d456149b3565b02949350505050565b6000816000190483118215151615614d6857614d686149b3565b500290565b8183823760009101908152919050565b600181811c90821680614d9157607f821691505b60208210811415614db257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156139d157600081815260208120601f850160051c81016020861015614ddf5750805b601f850160051c820191505b81811015611ffd57828155600101614deb565b60008135612e2b8161414c565b8135601e19833603018112614e1f57600080fd5b820180356001600160401b03811115614e3757600080fd5b60208136038184011315614e4a57600080fd5b614e5e82614e588654614d7d565b86614db8565b6000601f831160018114614e945760008415614e7c57508482018301355b600019600386901b1c1916600185901b178655614ef1565b600086815260209020601f19851690835b82811015614ec6578785018601358255938501936001909101908501614ea5565b5085821015614ee55760001960f88760031b161c198585890101351681555b505060018460011b0186555b5050840135600184015550613abc9050614f0d60408401614dfe565b6002830163ffffffff821663ffffffff198254161781555050565b606081526000614f3b6060830185614c27565b905063ffffffff8351166020830152602083015160408301529392505050565b6020815260006135136020830184614751565b600061ffff80831681811415614f8657614f866149b3565b600101939250505056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47424c535369676e6174757265436865636b65722e636865636b5369676e617475a2646970667358221220da602bbf43da1571c2a347a363bd3b7b790744174ddfc7e725da30de5b966c8a64736f6c634300080c0033",
}

// ContractBlocklessAVSABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractBlocklessAVSMetaData.ABI instead.
var ContractBlocklessAVSABI = ContractBlocklessAVSMetaData.ABI

// ContractBlocklessAVSBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractBlocklessAVSMetaData.Bin instead.
var ContractBlocklessAVSBin = ContractBlocklessAVSMetaData.Bin

// DeployContractBlocklessAVS deploys a new Ethereum contract, binding an instance of ContractBlocklessAVS to it.
func DeployContractBlocklessAVS(auth *bind.TransactOpts, backend bind.ContractBackend, _avsDirectory common.Address, _registryCoordinator common.Address, _stakeRegistry common.Address) (common.Address, *types.Transaction, *ContractBlocklessAVS, error) {
	parsed, err := ContractBlocklessAVSMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractBlocklessAVSBin), backend, _avsDirectory, _registryCoordinator, _stakeRegistry)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ContractBlocklessAVS{ContractBlocklessAVSCaller: ContractBlocklessAVSCaller{contract: contract}, ContractBlocklessAVSTransactor: ContractBlocklessAVSTransactor{contract: contract}, ContractBlocklessAVSFilterer: ContractBlocklessAVSFilterer{contract: contract}}, nil
}

// ContractBlocklessAVS is an auto generated Go binding around an Ethereum contract.
type ContractBlocklessAVS struct {
	ContractBlocklessAVSCaller     // Read-only binding to the contract
	ContractBlocklessAVSTransactor // Write-only binding to the contract
	ContractBlocklessAVSFilterer   // Log filterer for contract events
}

// ContractBlocklessAVSCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractBlocklessAVSCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractBlocklessAVSTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractBlocklessAVSTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractBlocklessAVSFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractBlocklessAVSFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractBlocklessAVSSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractBlocklessAVSSession struct {
	Contract     *ContractBlocklessAVS // Generic contract binding to set the session for
	CallOpts     bind.CallOpts         // Call options to use throughout this session
	TransactOpts bind.TransactOpts     // Transaction auth options to use throughout this session
}

// ContractBlocklessAVSCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractBlocklessAVSCallerSession struct {
	Contract *ContractBlocklessAVSCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts               // Call options to use throughout this session
}

// ContractBlocklessAVSTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractBlocklessAVSTransactorSession struct {
	Contract     *ContractBlocklessAVSTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts               // Transaction auth options to use throughout this session
}

// ContractBlocklessAVSRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractBlocklessAVSRaw struct {
	Contract *ContractBlocklessAVS // Generic contract binding to access the raw methods on
}

// ContractBlocklessAVSCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractBlocklessAVSCallerRaw struct {
	Contract *ContractBlocklessAVSCaller // Generic read-only contract binding to access the raw methods on
}

// ContractBlocklessAVSTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractBlocklessAVSTransactorRaw struct {
	Contract *ContractBlocklessAVSTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContractBlocklessAVS creates a new instance of ContractBlocklessAVS, bound to a specific deployed contract.
func NewContractBlocklessAVS(address common.Address, backend bind.ContractBackend) (*ContractBlocklessAVS, error) {
	contract, err := bindContractBlocklessAVS(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ContractBlocklessAVS{ContractBlocklessAVSCaller: ContractBlocklessAVSCaller{contract: contract}, ContractBlocklessAVSTransactor: ContractBlocklessAVSTransactor{contract: contract}, ContractBlocklessAVSFilterer: ContractBlocklessAVSFilterer{contract: contract}}, nil
}

// NewContractBlocklessAVSCaller creates a new read-only instance of ContractBlocklessAVS, bound to a specific deployed contract.
func NewContractBlocklessAVSCaller(address common.Address, caller bind.ContractCaller) (*ContractBlocklessAVSCaller, error) {
	contract, err := bindContractBlocklessAVS(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractBlocklessAVSCaller{contract: contract}, nil
}

// NewContractBlocklessAVSTransactor creates a new write-only instance of ContractBlocklessAVS, bound to a specific deployed contract.
func NewContractBlocklessAVSTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractBlocklessAVSTransactor, error) {
	contract, err := bindContractBlocklessAVS(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractBlocklessAVSTransactor{contract: contract}, nil
}

// NewContractBlocklessAVSFilterer creates a new log filterer instance of ContractBlocklessAVS, bound to a specific deployed contract.
func NewContractBlocklessAVSFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractBlocklessAVSFilterer, error) {
	contract, err := bindContractBlocklessAVS(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractBlocklessAVSFilterer{contract: contract}, nil
}

// bindContractBlocklessAVS binds a generic wrapper to an already deployed contract.
func bindContractBlocklessAVS(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractBlocklessAVSMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractBlocklessAVS *ContractBlocklessAVSRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractBlocklessAVS.Contract.ContractBlocklessAVSCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractBlocklessAVS *ContractBlocklessAVSRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.ContractBlocklessAVSTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractBlocklessAVS *ContractBlocklessAVSRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.ContractBlocklessAVSTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractBlocklessAVS *ContractBlocklessAVSCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractBlocklessAVS.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.contract.Transact(opts, method, params...)
}

// BLOCKSTALEMEASURE is a free data retrieval call binding the contract method 0x5e8b3f2d.
//
// Solidity: function BLOCK_STALE_MEASURE() view returns(uint32)
func (_ContractBlocklessAVS *ContractBlocklessAVSCaller) BLOCKSTALEMEASURE(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _ContractBlocklessAVS.contract.Call(opts, &out, "BLOCK_STALE_MEASURE")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// BLOCKSTALEMEASURE is a free data retrieval call binding the contract method 0x5e8b3f2d.
//
// Solidity: function BLOCK_STALE_MEASURE() view returns(uint32)
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) BLOCKSTALEMEASURE() (uint32, error) {
	return _ContractBlocklessAVS.Contract.BLOCKSTALEMEASURE(&_ContractBlocklessAVS.CallOpts)
}

// BLOCKSTALEMEASURE is a free data retrieval call binding the contract method 0x5e8b3f2d.
//
// Solidity: function BLOCK_STALE_MEASURE() view returns(uint32)
func (_ContractBlocklessAVS *ContractBlocklessAVSCallerSession) BLOCKSTALEMEASURE() (uint32, error) {
	return _ContractBlocklessAVS.Contract.BLOCKSTALEMEASURE(&_ContractBlocklessAVS.CallOpts)
}

// Aggregator is a free data retrieval call binding the contract method 0x245a7bfc.
//
// Solidity: function aggregator() view returns(address)
func (_ContractBlocklessAVS *ContractBlocklessAVSCaller) Aggregator(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractBlocklessAVS.contract.Call(opts, &out, "aggregator")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Aggregator is a free data retrieval call binding the contract method 0x245a7bfc.
//
// Solidity: function aggregator() view returns(address)
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) Aggregator() (common.Address, error) {
	return _ContractBlocklessAVS.Contract.Aggregator(&_ContractBlocklessAVS.CallOpts)
}

// Aggregator is a free data retrieval call binding the contract method 0x245a7bfc.
//
// Solidity: function aggregator() view returns(address)
func (_ContractBlocklessAVS *ContractBlocklessAVSCallerSession) Aggregator() (common.Address, error) {
	return _ContractBlocklessAVS.Contract.Aggregator(&_ContractBlocklessAVS.CallOpts)
}

// AvsDirectory is a free data retrieval call binding the contract method 0x6b3aa72e.
//
// Solidity: function avsDirectory() view returns(address)
func (_ContractBlocklessAVS *ContractBlocklessAVSCaller) AvsDirectory(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractBlocklessAVS.contract.Call(opts, &out, "avsDirectory")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// AvsDirectory is a free data retrieval call binding the contract method 0x6b3aa72e.
//
// Solidity: function avsDirectory() view returns(address)
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) AvsDirectory() (common.Address, error) {
	return _ContractBlocklessAVS.Contract.AvsDirectory(&_ContractBlocklessAVS.CallOpts)
}

// AvsDirectory is a free data retrieval call binding the contract method 0x6b3aa72e.
//
// Solidity: function avsDirectory() view returns(address)
func (_ContractBlocklessAVS *ContractBlocklessAVSCallerSession) AvsDirectory() (common.Address, error) {
	return _ContractBlocklessAVS.Contract.AvsDirectory(&_ContractBlocklessAVS.CallOpts)
}

// BlsApkRegistry is a free data retrieval call binding the contract method 0x5df45946.
//
// Solidity: function blsApkRegistry() view returns(address)
func (_ContractBlocklessAVS *ContractBlocklessAVSCaller) BlsApkRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractBlocklessAVS.contract.Call(opts, &out, "blsApkRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// BlsApkRegistry is a free data retrieval call binding the contract method 0x5df45946.
//
// Solidity: function blsApkRegistry() view returns(address)
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) BlsApkRegistry() (common.Address, error) {
	return _ContractBlocklessAVS.Contract.BlsApkRegistry(&_ContractBlocklessAVS.CallOpts)
}

// BlsApkRegistry is a free data retrieval call binding the contract method 0x5df45946.
//
// Solidity: function blsApkRegistry() view returns(address)
func (_ContractBlocklessAVS *ContractBlocklessAVSCallerSession) BlsApkRegistry() (common.Address, error) {
	return _ContractBlocklessAVS.Contract.BlsApkRegistry(&_ContractBlocklessAVS.CallOpts)
}

// CheckSignatures is a free data retrieval call binding the contract method 0x6efb4636.
//
// Solidity: function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) params) view returns((uint96[],uint96[]), bytes32)
func (_ContractBlocklessAVS *ContractBlocklessAVSCaller) CheckSignatures(opts *bind.CallOpts, msgHash [32]byte, quorumNumbers []byte, referenceBlockNumber uint32, params IBLSSignatureCheckerNonSignerStakesAndSignature) (IBLSSignatureCheckerQuorumStakeTotals, [32]byte, error) {
	var out []interface{}
	err := _ContractBlocklessAVS.contract.Call(opts, &out, "checkSignatures", msgHash, quorumNumbers, referenceBlockNumber, params)

	if err != nil {
		return *new(IBLSSignatureCheckerQuorumStakeTotals), *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new(IBLSSignatureCheckerQuorumStakeTotals)).(*IBLSSignatureCheckerQuorumStakeTotals)
	out1 := *abi.ConvertType(out[1], new([32]byte)).(*[32]byte)

	return out0, out1, err

}

// CheckSignatures is a free data retrieval call binding the contract method 0x6efb4636.
//
// Solidity: function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) params) view returns((uint96[],uint96[]), bytes32)
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) CheckSignatures(msgHash [32]byte, quorumNumbers []byte, referenceBlockNumber uint32, params IBLSSignatureCheckerNonSignerStakesAndSignature) (IBLSSignatureCheckerQuorumStakeTotals, [32]byte, error) {
	return _ContractBlocklessAVS.Contract.CheckSignatures(&_ContractBlocklessAVS.CallOpts, msgHash, quorumNumbers, referenceBlockNumber, params)
}

// CheckSignatures is a free data retrieval call binding the contract method 0x6efb4636.
//
// Solidity: function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) params) view returns((uint96[],uint96[]), bytes32)
func (_ContractBlocklessAVS *ContractBlocklessAVSCallerSession) CheckSignatures(msgHash [32]byte, quorumNumbers []byte, referenceBlockNumber uint32, params IBLSSignatureCheckerNonSignerStakesAndSignature) (IBLSSignatureCheckerQuorumStakeTotals, [32]byte, error) {
	return _ContractBlocklessAVS.Contract.CheckSignatures(&_ContractBlocklessAVS.CallOpts, msgHash, quorumNumbers, referenceBlockNumber, params)
}

// Delegation is a free data retrieval call binding the contract method 0xdf5cf723.
//
// Solidity: function delegation() view returns(address)
func (_ContractBlocklessAVS *ContractBlocklessAVSCaller) Delegation(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractBlocklessAVS.contract.Call(opts, &out, "delegation")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Delegation is a free data retrieval call binding the contract method 0xdf5cf723.
//
// Solidity: function delegation() view returns(address)
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) Delegation() (common.Address, error) {
	return _ContractBlocklessAVS.Contract.Delegation(&_ContractBlocklessAVS.CallOpts)
}

// Delegation is a free data retrieval call binding the contract method 0xdf5cf723.
//
// Solidity: function delegation() view returns(address)
func (_ContractBlocklessAVS *ContractBlocklessAVSCallerSession) Delegation() (common.Address, error) {
	return _ContractBlocklessAVS.Contract.Delegation(&_ContractBlocklessAVS.CallOpts)
}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractBlocklessAVS *ContractBlocklessAVSCaller) GetOperatorRestakedStrategies(opts *bind.CallOpts, operator common.Address) ([]common.Address, error) {
	var out []interface{}
	err := _ContractBlocklessAVS.contract.Call(opts, &out, "getOperatorRestakedStrategies", operator)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) GetOperatorRestakedStrategies(operator common.Address) ([]common.Address, error) {
	return _ContractBlocklessAVS.Contract.GetOperatorRestakedStrategies(&_ContractBlocklessAVS.CallOpts, operator)
}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractBlocklessAVS *ContractBlocklessAVSCallerSession) GetOperatorRestakedStrategies(operator common.Address) ([]common.Address, error) {
	return _ContractBlocklessAVS.Contract.GetOperatorRestakedStrategies(&_ContractBlocklessAVS.CallOpts, operator)
}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractBlocklessAVS *ContractBlocklessAVSCaller) GetRestakeableStrategies(opts *bind.CallOpts) ([]common.Address, error) {
	var out []interface{}
	err := _ContractBlocklessAVS.contract.Call(opts, &out, "getRestakeableStrategies")

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) GetRestakeableStrategies() ([]common.Address, error) {
	return _ContractBlocklessAVS.Contract.GetRestakeableStrategies(&_ContractBlocklessAVS.CallOpts)
}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractBlocklessAVS *ContractBlocklessAVSCallerSession) GetRestakeableStrategies() ([]common.Address, error) {
	return _ContractBlocklessAVS.Contract.GetRestakeableStrategies(&_ContractBlocklessAVS.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractBlocklessAVS *ContractBlocklessAVSCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractBlocklessAVS.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) Owner() (common.Address, error) {
	return _ContractBlocklessAVS.Contract.Owner(&_ContractBlocklessAVS.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractBlocklessAVS *ContractBlocklessAVSCallerSession) Owner() (common.Address, error) {
	return _ContractBlocklessAVS.Contract.Owner(&_ContractBlocklessAVS.CallOpts)
}

// Paused is a free data retrieval call binding the contract method 0x5ac86ab7.
//
// Solidity: function paused(uint8 index) view returns(bool)
func (_ContractBlocklessAVS *ContractBlocklessAVSCaller) Paused(opts *bind.CallOpts, index uint8) (bool, error) {
	var out []interface{}
	err := _ContractBlocklessAVS.contract.Call(opts, &out, "paused", index)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Paused is a free data retrieval call binding the contract method 0x5ac86ab7.
//
// Solidity: function paused(uint8 index) view returns(bool)
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) Paused(index uint8) (bool, error) {
	return _ContractBlocklessAVS.Contract.Paused(&_ContractBlocklessAVS.CallOpts, index)
}

// Paused is a free data retrieval call binding the contract method 0x5ac86ab7.
//
// Solidity: function paused(uint8 index) view returns(bool)
func (_ContractBlocklessAVS *ContractBlocklessAVSCallerSession) Paused(index uint8) (bool, error) {
	return _ContractBlocklessAVS.Contract.Paused(&_ContractBlocklessAVS.CallOpts, index)
}

// Paused0 is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_ContractBlocklessAVS *ContractBlocklessAVSCaller) Paused0(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractBlocklessAVS.contract.Call(opts, &out, "paused0")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Paused0 is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) Paused0() (*big.Int, error) {
	return _ContractBlocklessAVS.Contract.Paused0(&_ContractBlocklessAVS.CallOpts)
}

// Paused0 is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(uint256)
func (_ContractBlocklessAVS *ContractBlocklessAVSCallerSession) Paused0() (*big.Int, error) {
	return _ContractBlocklessAVS.Contract.Paused0(&_ContractBlocklessAVS.CallOpts)
}

// PauserRegistry is a free data retrieval call binding the contract method 0x886f1195.
//
// Solidity: function pauserRegistry() view returns(address)
func (_ContractBlocklessAVS *ContractBlocklessAVSCaller) PauserRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractBlocklessAVS.contract.Call(opts, &out, "pauserRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PauserRegistry is a free data retrieval call binding the contract method 0x886f1195.
//
// Solidity: function pauserRegistry() view returns(address)
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) PauserRegistry() (common.Address, error) {
	return _ContractBlocklessAVS.Contract.PauserRegistry(&_ContractBlocklessAVS.CallOpts)
}

// PauserRegistry is a free data retrieval call binding the contract method 0x886f1195.
//
// Solidity: function pauserRegistry() view returns(address)
func (_ContractBlocklessAVS *ContractBlocklessAVSCallerSession) PauserRegistry() (common.Address, error) {
	return _ContractBlocklessAVS.Contract.PauserRegistry(&_ContractBlocklessAVS.CallOpts)
}

// Price is a free data retrieval call binding the contract method 0xfe2c6198.
//
// Solidity: function price(string symbol) view returns((string,uint256,uint32))
func (_ContractBlocklessAVS *ContractBlocklessAVSCaller) Price(opts *bind.CallOpts, symbol string) (IBlocklessAVSPrice, error) {
	var out []interface{}
	err := _ContractBlocklessAVS.contract.Call(opts, &out, "price", symbol)

	if err != nil {
		return *new(IBlocklessAVSPrice), err
	}

	out0 := *abi.ConvertType(out[0], new(IBlocklessAVSPrice)).(*IBlocklessAVSPrice)

	return out0, err

}

// Price is a free data retrieval call binding the contract method 0xfe2c6198.
//
// Solidity: function price(string symbol) view returns((string,uint256,uint32))
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) Price(symbol string) (IBlocklessAVSPrice, error) {
	return _ContractBlocklessAVS.Contract.Price(&_ContractBlocklessAVS.CallOpts, symbol)
}

// Price is a free data retrieval call binding the contract method 0xfe2c6198.
//
// Solidity: function price(string symbol) view returns((string,uint256,uint32))
func (_ContractBlocklessAVS *ContractBlocklessAVSCallerSession) Price(symbol string) (IBlocklessAVSPrice, error) {
	return _ContractBlocklessAVS.Contract.Price(&_ContractBlocklessAVS.CallOpts, symbol)
}

// Prices is a free data retrieval call binding the contract method 0xc3825f4b.
//
// Solidity: function prices(string ) view returns(string symbol, uint256 price, uint32 timestamp)
func (_ContractBlocklessAVS *ContractBlocklessAVSCaller) Prices(opts *bind.CallOpts, arg0 string) (struct {
	Symbol    string
	Price     *big.Int
	Timestamp uint32
}, error) {
	var out []interface{}
	err := _ContractBlocklessAVS.contract.Call(opts, &out, "prices", arg0)

	outstruct := new(struct {
		Symbol    string
		Price     *big.Int
		Timestamp uint32
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Symbol = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.Price = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.Timestamp = *abi.ConvertType(out[2], new(uint32)).(*uint32)

	return *outstruct, err

}

// Prices is a free data retrieval call binding the contract method 0xc3825f4b.
//
// Solidity: function prices(string ) view returns(string symbol, uint256 price, uint32 timestamp)
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) Prices(arg0 string) (struct {
	Symbol    string
	Price     *big.Int
	Timestamp uint32
}, error) {
	return _ContractBlocklessAVS.Contract.Prices(&_ContractBlocklessAVS.CallOpts, arg0)
}

// Prices is a free data retrieval call binding the contract method 0xc3825f4b.
//
// Solidity: function prices(string ) view returns(string symbol, uint256 price, uint32 timestamp)
func (_ContractBlocklessAVS *ContractBlocklessAVSCallerSession) Prices(arg0 string) (struct {
	Symbol    string
	Price     *big.Int
	Timestamp uint32
}, error) {
	return _ContractBlocklessAVS.Contract.Prices(&_ContractBlocklessAVS.CallOpts, arg0)
}

// RegistryCoordinator is a free data retrieval call binding the contract method 0x6d14a987.
//
// Solidity: function registryCoordinator() view returns(address)
func (_ContractBlocklessAVS *ContractBlocklessAVSCaller) RegistryCoordinator(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractBlocklessAVS.contract.Call(opts, &out, "registryCoordinator")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// RegistryCoordinator is a free data retrieval call binding the contract method 0x6d14a987.
//
// Solidity: function registryCoordinator() view returns(address)
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) RegistryCoordinator() (common.Address, error) {
	return _ContractBlocklessAVS.Contract.RegistryCoordinator(&_ContractBlocklessAVS.CallOpts)
}

// RegistryCoordinator is a free data retrieval call binding the contract method 0x6d14a987.
//
// Solidity: function registryCoordinator() view returns(address)
func (_ContractBlocklessAVS *ContractBlocklessAVSCallerSession) RegistryCoordinator() (common.Address, error) {
	return _ContractBlocklessAVS.Contract.RegistryCoordinator(&_ContractBlocklessAVS.CallOpts)
}

// StakeRegistry is a free data retrieval call binding the contract method 0x68304835.
//
// Solidity: function stakeRegistry() view returns(address)
func (_ContractBlocklessAVS *ContractBlocklessAVSCaller) StakeRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractBlocklessAVS.contract.Call(opts, &out, "stakeRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// StakeRegistry is a free data retrieval call binding the contract method 0x68304835.
//
// Solidity: function stakeRegistry() view returns(address)
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) StakeRegistry() (common.Address, error) {
	return _ContractBlocklessAVS.Contract.StakeRegistry(&_ContractBlocklessAVS.CallOpts)
}

// StakeRegistry is a free data retrieval call binding the contract method 0x68304835.
//
// Solidity: function stakeRegistry() view returns(address)
func (_ContractBlocklessAVS *ContractBlocklessAVSCallerSession) StakeRegistry() (common.Address, error) {
	return _ContractBlocklessAVS.Contract.StakeRegistry(&_ContractBlocklessAVS.CallOpts)
}

// StaleStakesForbidden is a free data retrieval call binding the contract method 0xb98d0908.
//
// Solidity: function staleStakesForbidden() view returns(bool)
func (_ContractBlocklessAVS *ContractBlocklessAVSCaller) StaleStakesForbidden(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _ContractBlocklessAVS.contract.Call(opts, &out, "staleStakesForbidden")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// StaleStakesForbidden is a free data retrieval call binding the contract method 0xb98d0908.
//
// Solidity: function staleStakesForbidden() view returns(bool)
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) StaleStakesForbidden() (bool, error) {
	return _ContractBlocklessAVS.Contract.StaleStakesForbidden(&_ContractBlocklessAVS.CallOpts)
}

// StaleStakesForbidden is a free data retrieval call binding the contract method 0xb98d0908.
//
// Solidity: function staleStakesForbidden() view returns(bool)
func (_ContractBlocklessAVS *ContractBlocklessAVSCallerSession) StaleStakesForbidden() (bool, error) {
	return _ContractBlocklessAVS.Contract.StaleStakesForbidden(&_ContractBlocklessAVS.CallOpts)
}

// TrySignatureAndApkVerification is a free data retrieval call binding the contract method 0x171f1d5b.
//
// Solidity: function trySignatureAndApkVerification(bytes32 msgHash, (uint256,uint256) apk, (uint256[2],uint256[2]) apkG2, (uint256,uint256) sigma) view returns(bool pairingSuccessful, bool siganatureIsValid)
func (_ContractBlocklessAVS *ContractBlocklessAVSCaller) TrySignatureAndApkVerification(opts *bind.CallOpts, msgHash [32]byte, apk BN254G1Point, apkG2 BN254G2Point, sigma BN254G1Point) (struct {
	PairingSuccessful bool
	SiganatureIsValid bool
}, error) {
	var out []interface{}
	err := _ContractBlocklessAVS.contract.Call(opts, &out, "trySignatureAndApkVerification", msgHash, apk, apkG2, sigma)

	outstruct := new(struct {
		PairingSuccessful bool
		SiganatureIsValid bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.PairingSuccessful = *abi.ConvertType(out[0], new(bool)).(*bool)
	outstruct.SiganatureIsValid = *abi.ConvertType(out[1], new(bool)).(*bool)

	return *outstruct, err

}

// TrySignatureAndApkVerification is a free data retrieval call binding the contract method 0x171f1d5b.
//
// Solidity: function trySignatureAndApkVerification(bytes32 msgHash, (uint256,uint256) apk, (uint256[2],uint256[2]) apkG2, (uint256,uint256) sigma) view returns(bool pairingSuccessful, bool siganatureIsValid)
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) TrySignatureAndApkVerification(msgHash [32]byte, apk BN254G1Point, apkG2 BN254G2Point, sigma BN254G1Point) (struct {
	PairingSuccessful bool
	SiganatureIsValid bool
}, error) {
	return _ContractBlocklessAVS.Contract.TrySignatureAndApkVerification(&_ContractBlocklessAVS.CallOpts, msgHash, apk, apkG2, sigma)
}

// TrySignatureAndApkVerification is a free data retrieval call binding the contract method 0x171f1d5b.
//
// Solidity: function trySignatureAndApkVerification(bytes32 msgHash, (uint256,uint256) apk, (uint256[2],uint256[2]) apkG2, (uint256,uint256) sigma) view returns(bool pairingSuccessful, bool siganatureIsValid)
func (_ContractBlocklessAVS *ContractBlocklessAVSCallerSession) TrySignatureAndApkVerification(msgHash [32]byte, apk BN254G1Point, apkG2 BN254G2Point, sigma BN254G1Point) (struct {
	PairingSuccessful bool
	SiganatureIsValid bool
}, error) {
	return _ContractBlocklessAVS.Contract.TrySignatureAndApkVerification(&_ContractBlocklessAVS.CallOpts, msgHash, apk, apkG2, sigma)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactor) DeregisterOperatorFromAVS(opts *bind.TransactOpts, operator common.Address) (*types.Transaction, error) {
	return _ContractBlocklessAVS.contract.Transact(opts, "deregisterOperatorFromAVS", operator)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) DeregisterOperatorFromAVS(operator common.Address) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.DeregisterOperatorFromAVS(&_ContractBlocklessAVS.TransactOpts, operator)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactorSession) DeregisterOperatorFromAVS(operator common.Address) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.DeregisterOperatorFromAVS(&_ContractBlocklessAVS.TransactOpts, operator)
}

// FreezeOperator is a paid mutator transaction binding the contract method 0x38c8ee64.
//
// Solidity: function freezeOperator(address operatorAddr) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactor) FreezeOperator(opts *bind.TransactOpts, operatorAddr common.Address) (*types.Transaction, error) {
	return _ContractBlocklessAVS.contract.Transact(opts, "freezeOperator", operatorAddr)
}

// FreezeOperator is a paid mutator transaction binding the contract method 0x38c8ee64.
//
// Solidity: function freezeOperator(address operatorAddr) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) FreezeOperator(operatorAddr common.Address) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.FreezeOperator(&_ContractBlocklessAVS.TransactOpts, operatorAddr)
}

// FreezeOperator is a paid mutator transaction binding the contract method 0x38c8ee64.
//
// Solidity: function freezeOperator(address operatorAddr) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactorSession) FreezeOperator(operatorAddr common.Address) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.FreezeOperator(&_ContractBlocklessAVS.TransactOpts, operatorAddr)
}

// Initialize is a paid mutator transaction binding the contract method 0xc0c53b8b.
//
// Solidity: function initialize(address _pauserRegistry, address _initialOwner, address _aggregator) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactor) Initialize(opts *bind.TransactOpts, _pauserRegistry common.Address, _initialOwner common.Address, _aggregator common.Address) (*types.Transaction, error) {
	return _ContractBlocklessAVS.contract.Transact(opts, "initialize", _pauserRegistry, _initialOwner, _aggregator)
}

// Initialize is a paid mutator transaction binding the contract method 0xc0c53b8b.
//
// Solidity: function initialize(address _pauserRegistry, address _initialOwner, address _aggregator) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) Initialize(_pauserRegistry common.Address, _initialOwner common.Address, _aggregator common.Address) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.Initialize(&_ContractBlocklessAVS.TransactOpts, _pauserRegistry, _initialOwner, _aggregator)
}

// Initialize is a paid mutator transaction binding the contract method 0xc0c53b8b.
//
// Solidity: function initialize(address _pauserRegistry, address _initialOwner, address _aggregator) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactorSession) Initialize(_pauserRegistry common.Address, _initialOwner common.Address, _aggregator common.Address) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.Initialize(&_ContractBlocklessAVS.TransactOpts, _pauserRegistry, _initialOwner, _aggregator)
}

// Pause is a paid mutator transaction binding the contract method 0x136439dd.
//
// Solidity: function pause(uint256 newPausedStatus) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactor) Pause(opts *bind.TransactOpts, newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractBlocklessAVS.contract.Transact(opts, "pause", newPausedStatus)
}

// Pause is a paid mutator transaction binding the contract method 0x136439dd.
//
// Solidity: function pause(uint256 newPausedStatus) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) Pause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.Pause(&_ContractBlocklessAVS.TransactOpts, newPausedStatus)
}

// Pause is a paid mutator transaction binding the contract method 0x136439dd.
//
// Solidity: function pause(uint256 newPausedStatus) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactorSession) Pause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.Pause(&_ContractBlocklessAVS.TransactOpts, newPausedStatus)
}

// PauseAll is a paid mutator transaction binding the contract method 0x595c6a67.
//
// Solidity: function pauseAll() returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactor) PauseAll(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractBlocklessAVS.contract.Transact(opts, "pauseAll")
}

// PauseAll is a paid mutator transaction binding the contract method 0x595c6a67.
//
// Solidity: function pauseAll() returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) PauseAll() (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.PauseAll(&_ContractBlocklessAVS.TransactOpts)
}

// PauseAll is a paid mutator transaction binding the contract method 0x595c6a67.
//
// Solidity: function pauseAll() returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactorSession) PauseAll() (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.PauseAll(&_ContractBlocklessAVS.TransactOpts)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactor) RegisterOperatorToAVS(opts *bind.TransactOpts, operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractBlocklessAVS.contract.Transact(opts, "registerOperatorToAVS", operator, operatorSignature)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) RegisterOperatorToAVS(operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.RegisterOperatorToAVS(&_ContractBlocklessAVS.TransactOpts, operator, operatorSignature)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactorSession) RegisterOperatorToAVS(operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.RegisterOperatorToAVS(&_ContractBlocklessAVS.TransactOpts, operator, operatorSignature)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractBlocklessAVS.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.RenounceOwnership(&_ContractBlocklessAVS.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.RenounceOwnership(&_ContractBlocklessAVS.TransactOpts)
}

// SetAggregator is a paid mutator transaction binding the contract method 0xf9120af6.
//
// Solidity: function setAggregator(address _newAggregator) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactor) SetAggregator(opts *bind.TransactOpts, _newAggregator common.Address) (*types.Transaction, error) {
	return _ContractBlocklessAVS.contract.Transact(opts, "setAggregator", _newAggregator)
}

// SetAggregator is a paid mutator transaction binding the contract method 0xf9120af6.
//
// Solidity: function setAggregator(address _newAggregator) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) SetAggregator(_newAggregator common.Address) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.SetAggregator(&_ContractBlocklessAVS.TransactOpts, _newAggregator)
}

// SetAggregator is a paid mutator transaction binding the contract method 0xf9120af6.
//
// Solidity: function setAggregator(address _newAggregator) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactorSession) SetAggregator(_newAggregator common.Address) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.SetAggregator(&_ContractBlocklessAVS.TransactOpts, _newAggregator)
}

// SetPauserRegistry is a paid mutator transaction binding the contract method 0x10d67a2f.
//
// Solidity: function setPauserRegistry(address newPauserRegistry) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactor) SetPauserRegistry(opts *bind.TransactOpts, newPauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractBlocklessAVS.contract.Transact(opts, "setPauserRegistry", newPauserRegistry)
}

// SetPauserRegistry is a paid mutator transaction binding the contract method 0x10d67a2f.
//
// Solidity: function setPauserRegistry(address newPauserRegistry) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) SetPauserRegistry(newPauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.SetPauserRegistry(&_ContractBlocklessAVS.TransactOpts, newPauserRegistry)
}

// SetPauserRegistry is a paid mutator transaction binding the contract method 0x10d67a2f.
//
// Solidity: function setPauserRegistry(address newPauserRegistry) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactorSession) SetPauserRegistry(newPauserRegistry common.Address) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.SetPauserRegistry(&_ContractBlocklessAVS.TransactOpts, newPauserRegistry)
}

// SetStaleStakesForbidden is a paid mutator transaction binding the contract method 0x416c7e5e.
//
// Solidity: function setStaleStakesForbidden(bool value) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactor) SetStaleStakesForbidden(opts *bind.TransactOpts, value bool) (*types.Transaction, error) {
	return _ContractBlocklessAVS.contract.Transact(opts, "setStaleStakesForbidden", value)
}

// SetStaleStakesForbidden is a paid mutator transaction binding the contract method 0x416c7e5e.
//
// Solidity: function setStaleStakesForbidden(bool value) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) SetStaleStakesForbidden(value bool) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.SetStaleStakesForbidden(&_ContractBlocklessAVS.TransactOpts, value)
}

// SetStaleStakesForbidden is a paid mutator transaction binding the contract method 0x416c7e5e.
//
// Solidity: function setStaleStakesForbidden(bool value) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactorSession) SetStaleStakesForbidden(value bool) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.SetStaleStakesForbidden(&_ContractBlocklessAVS.TransactOpts, value)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _ContractBlocklessAVS.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.TransferOwnership(&_ContractBlocklessAVS.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.TransferOwnership(&_ContractBlocklessAVS.TransactOpts, newOwner)
}

// Unpause is a paid mutator transaction binding the contract method 0xfabc1cbc.
//
// Solidity: function unpause(uint256 newPausedStatus) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactor) Unpause(opts *bind.TransactOpts, newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractBlocklessAVS.contract.Transact(opts, "unpause", newPausedStatus)
}

// Unpause is a paid mutator transaction binding the contract method 0xfabc1cbc.
//
// Solidity: function unpause(uint256 newPausedStatus) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) Unpause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.Unpause(&_ContractBlocklessAVS.TransactOpts, newPausedStatus)
}

// Unpause is a paid mutator transaction binding the contract method 0xfabc1cbc.
//
// Solidity: function unpause(uint256 newPausedStatus) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactorSession) Unpause(newPausedStatus *big.Int) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.Unpause(&_ContractBlocklessAVS.TransactOpts, newPausedStatus)
}

// UpdateAVSMetadataURI is a paid mutator transaction binding the contract method 0xa98fb355.
//
// Solidity: function updateAVSMetadataURI(string _metadataURI) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactor) UpdateAVSMetadataURI(opts *bind.TransactOpts, _metadataURI string) (*types.Transaction, error) {
	return _ContractBlocklessAVS.contract.Transact(opts, "updateAVSMetadataURI", _metadataURI)
}

// UpdateAVSMetadataURI is a paid mutator transaction binding the contract method 0xa98fb355.
//
// Solidity: function updateAVSMetadataURI(string _metadataURI) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) UpdateAVSMetadataURI(_metadataURI string) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.UpdateAVSMetadataURI(&_ContractBlocklessAVS.TransactOpts, _metadataURI)
}

// UpdateAVSMetadataURI is a paid mutator transaction binding the contract method 0xa98fb355.
//
// Solidity: function updateAVSMetadataURI(string _metadataURI) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactorSession) UpdateAVSMetadataURI(_metadataURI string) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.UpdateAVSMetadataURI(&_ContractBlocklessAVS.TransactOpts, _metadataURI)
}

// UpdateOraclePrice is a paid mutator transaction binding the contract method 0xa68b0f7c.
//
// Solidity: function updateOraclePrice((string,uint32,bytes,uint8) oracleRequest, (string,uint256,uint32) priceResponse, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactor) UpdateOraclePrice(opts *bind.TransactOpts, oracleRequest IBlocklessAVSOracleRequest, priceResponse IBlocklessAVSPrice, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractBlocklessAVS.contract.Transact(opts, "updateOraclePrice", oracleRequest, priceResponse, nonSignerStakesAndSignature)
}

// UpdateOraclePrice is a paid mutator transaction binding the contract method 0xa68b0f7c.
//
// Solidity: function updateOraclePrice((string,uint32,bytes,uint8) oracleRequest, (string,uint256,uint32) priceResponse, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSSession) UpdateOraclePrice(oracleRequest IBlocklessAVSOracleRequest, priceResponse IBlocklessAVSPrice, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.UpdateOraclePrice(&_ContractBlocklessAVS.TransactOpts, oracleRequest, priceResponse, nonSignerStakesAndSignature)
}

// UpdateOraclePrice is a paid mutator transaction binding the contract method 0xa68b0f7c.
//
// Solidity: function updateOraclePrice((string,uint32,bytes,uint8) oracleRequest, (string,uint256,uint32) priceResponse, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) returns()
func (_ContractBlocklessAVS *ContractBlocklessAVSTransactorSession) UpdateOraclePrice(oracleRequest IBlocklessAVSOracleRequest, priceResponse IBlocklessAVSPrice, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractBlocklessAVS.Contract.UpdateOraclePrice(&_ContractBlocklessAVS.TransactOpts, oracleRequest, priceResponse, nonSignerStakesAndSignature)
}

// ContractBlocklessAVSAggregatorUpdatedIterator is returned from FilterAggregatorUpdated and is used to iterate over the raw logs and unpacked data for AggregatorUpdated events raised by the ContractBlocklessAVS contract.
type ContractBlocklessAVSAggregatorUpdatedIterator struct {
	Event *ContractBlocklessAVSAggregatorUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractBlocklessAVSAggregatorUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractBlocklessAVSAggregatorUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractBlocklessAVSAggregatorUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractBlocklessAVSAggregatorUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractBlocklessAVSAggregatorUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractBlocklessAVSAggregatorUpdated represents a AggregatorUpdated event raised by the ContractBlocklessAVS contract.
type ContractBlocklessAVSAggregatorUpdated struct {
	PreviousAggregator common.Address
	NewAggregator      common.Address
	Raw                types.Log // Blockchain specific contextual infos
}

// FilterAggregatorUpdated is a free log retrieval operation binding the contract event 0x89baabef7dfd0683c0ac16fd2a8431c51b49fbe654c3f7b5ef19763e2ccd88f2.
//
// Solidity: event AggregatorUpdated(address indexed previousAggregator, address indexed newAggregator)
func (_ContractBlocklessAVS *ContractBlocklessAVSFilterer) FilterAggregatorUpdated(opts *bind.FilterOpts, previousAggregator []common.Address, newAggregator []common.Address) (*ContractBlocklessAVSAggregatorUpdatedIterator, error) {

	var previousAggregatorRule []interface{}
	for _, previousAggregatorItem := range previousAggregator {
		previousAggregatorRule = append(previousAggregatorRule, previousAggregatorItem)
	}
	var newAggregatorRule []interface{}
	for _, newAggregatorItem := range newAggregator {
		newAggregatorRule = append(newAggregatorRule, newAggregatorItem)
	}

	logs, sub, err := _ContractBlocklessAVS.contract.FilterLogs(opts, "AggregatorUpdated", previousAggregatorRule, newAggregatorRule)
	if err != nil {
		return nil, err
	}
	return &ContractBlocklessAVSAggregatorUpdatedIterator{contract: _ContractBlocklessAVS.contract, event: "AggregatorUpdated", logs: logs, sub: sub}, nil
}

// WatchAggregatorUpdated is a free log subscription operation binding the contract event 0x89baabef7dfd0683c0ac16fd2a8431c51b49fbe654c3f7b5ef19763e2ccd88f2.
//
// Solidity: event AggregatorUpdated(address indexed previousAggregator, address indexed newAggregator)
func (_ContractBlocklessAVS *ContractBlocklessAVSFilterer) WatchAggregatorUpdated(opts *bind.WatchOpts, sink chan<- *ContractBlocklessAVSAggregatorUpdated, previousAggregator []common.Address, newAggregator []common.Address) (event.Subscription, error) {

	var previousAggregatorRule []interface{}
	for _, previousAggregatorItem := range previousAggregator {
		previousAggregatorRule = append(previousAggregatorRule, previousAggregatorItem)
	}
	var newAggregatorRule []interface{}
	for _, newAggregatorItem := range newAggregator {
		newAggregatorRule = append(newAggregatorRule, newAggregatorItem)
	}

	logs, sub, err := _ContractBlocklessAVS.contract.WatchLogs(opts, "AggregatorUpdated", previousAggregatorRule, newAggregatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractBlocklessAVSAggregatorUpdated)
				if err := _ContractBlocklessAVS.contract.UnpackLog(event, "AggregatorUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAggregatorUpdated is a log parse operation binding the contract event 0x89baabef7dfd0683c0ac16fd2a8431c51b49fbe654c3f7b5ef19763e2ccd88f2.
//
// Solidity: event AggregatorUpdated(address indexed previousAggregator, address indexed newAggregator)
func (_ContractBlocklessAVS *ContractBlocklessAVSFilterer) ParseAggregatorUpdated(log types.Log) (*ContractBlocklessAVSAggregatorUpdated, error) {
	event := new(ContractBlocklessAVSAggregatorUpdated)
	if err := _ContractBlocklessAVS.contract.UnpackLog(event, "AggregatorUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractBlocklessAVSInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the ContractBlocklessAVS contract.
type ContractBlocklessAVSInitializedIterator struct {
	Event *ContractBlocklessAVSInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractBlocklessAVSInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractBlocklessAVSInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractBlocklessAVSInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractBlocklessAVSInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractBlocklessAVSInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractBlocklessAVSInitialized represents a Initialized event raised by the ContractBlocklessAVS contract.
type ContractBlocklessAVSInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractBlocklessAVS *ContractBlocklessAVSFilterer) FilterInitialized(opts *bind.FilterOpts) (*ContractBlocklessAVSInitializedIterator, error) {

	logs, sub, err := _ContractBlocklessAVS.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &ContractBlocklessAVSInitializedIterator{contract: _ContractBlocklessAVS.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractBlocklessAVS *ContractBlocklessAVSFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *ContractBlocklessAVSInitialized) (event.Subscription, error) {

	logs, sub, err := _ContractBlocklessAVS.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractBlocklessAVSInitialized)
				if err := _ContractBlocklessAVS.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractBlocklessAVS *ContractBlocklessAVSFilterer) ParseInitialized(log types.Log) (*ContractBlocklessAVSInitialized, error) {
	event := new(ContractBlocklessAVSInitialized)
	if err := _ContractBlocklessAVS.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractBlocklessAVSOracleUpdateIterator is returned from FilterOracleUpdate and is used to iterate over the raw logs and unpacked data for OracleUpdate events raised by the ContractBlocklessAVS contract.
type ContractBlocklessAVSOracleUpdateIterator struct {
	Event *ContractBlocklessAVSOracleUpdate // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractBlocklessAVSOracleUpdateIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractBlocklessAVSOracleUpdate)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractBlocklessAVSOracleUpdate)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractBlocklessAVSOracleUpdateIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractBlocklessAVSOracleUpdateIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractBlocklessAVSOracleUpdate represents a OracleUpdate event raised by the ContractBlocklessAVS contract.
type ContractBlocklessAVSOracleUpdate struct {
	PriceResponse               IBlocklessAVSPrice
	OraclePriceResponseMetadata IBlocklessAVSOraclePriceResponseMetadata
	Raw                         types.Log // Blockchain specific contextual infos
}

// FilterOracleUpdate is a free log retrieval operation binding the contract event 0xb87b504d9a6e5fc52f4f36a7cfc9c4eeeadeb4850d6155226e8b99d69fc11fd5.
//
// Solidity: event OracleUpdate((string,uint256,uint32) priceResponse, (uint32,bytes32) oraclePriceResponseMetadata)
func (_ContractBlocklessAVS *ContractBlocklessAVSFilterer) FilterOracleUpdate(opts *bind.FilterOpts) (*ContractBlocklessAVSOracleUpdateIterator, error) {

	logs, sub, err := _ContractBlocklessAVS.contract.FilterLogs(opts, "OracleUpdate")
	if err != nil {
		return nil, err
	}
	return &ContractBlocklessAVSOracleUpdateIterator{contract: _ContractBlocklessAVS.contract, event: "OracleUpdate", logs: logs, sub: sub}, nil
}

// WatchOracleUpdate is a free log subscription operation binding the contract event 0xb87b504d9a6e5fc52f4f36a7cfc9c4eeeadeb4850d6155226e8b99d69fc11fd5.
//
// Solidity: event OracleUpdate((string,uint256,uint32) priceResponse, (uint32,bytes32) oraclePriceResponseMetadata)
func (_ContractBlocklessAVS *ContractBlocklessAVSFilterer) WatchOracleUpdate(opts *bind.WatchOpts, sink chan<- *ContractBlocklessAVSOracleUpdate) (event.Subscription, error) {

	logs, sub, err := _ContractBlocklessAVS.contract.WatchLogs(opts, "OracleUpdate")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractBlocklessAVSOracleUpdate)
				if err := _ContractBlocklessAVS.contract.UnpackLog(event, "OracleUpdate", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOracleUpdate is a log parse operation binding the contract event 0xb87b504d9a6e5fc52f4f36a7cfc9c4eeeadeb4850d6155226e8b99d69fc11fd5.
//
// Solidity: event OracleUpdate((string,uint256,uint32) priceResponse, (uint32,bytes32) oraclePriceResponseMetadata)
func (_ContractBlocklessAVS *ContractBlocklessAVSFilterer) ParseOracleUpdate(log types.Log) (*ContractBlocklessAVSOracleUpdate, error) {
	event := new(ContractBlocklessAVSOracleUpdate)
	if err := _ContractBlocklessAVS.contract.UnpackLog(event, "OracleUpdate", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractBlocklessAVSOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the ContractBlocklessAVS contract.
type ContractBlocklessAVSOwnershipTransferredIterator struct {
	Event *ContractBlocklessAVSOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractBlocklessAVSOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractBlocklessAVSOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractBlocklessAVSOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractBlocklessAVSOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractBlocklessAVSOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractBlocklessAVSOwnershipTransferred represents a OwnershipTransferred event raised by the ContractBlocklessAVS contract.
type ContractBlocklessAVSOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractBlocklessAVS *ContractBlocklessAVSFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*ContractBlocklessAVSOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractBlocklessAVS.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &ContractBlocklessAVSOwnershipTransferredIterator{contract: _ContractBlocklessAVS.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractBlocklessAVS *ContractBlocklessAVSFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *ContractBlocklessAVSOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractBlocklessAVS.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractBlocklessAVSOwnershipTransferred)
				if err := _ContractBlocklessAVS.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractBlocklessAVS *ContractBlocklessAVSFilterer) ParseOwnershipTransferred(log types.Log) (*ContractBlocklessAVSOwnershipTransferred, error) {
	event := new(ContractBlocklessAVSOwnershipTransferred)
	if err := _ContractBlocklessAVS.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractBlocklessAVSPausedIterator is returned from FilterPaused and is used to iterate over the raw logs and unpacked data for Paused events raised by the ContractBlocklessAVS contract.
type ContractBlocklessAVSPausedIterator struct {
	Event *ContractBlocklessAVSPaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractBlocklessAVSPausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractBlocklessAVSPaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractBlocklessAVSPaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractBlocklessAVSPausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractBlocklessAVSPausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractBlocklessAVSPaused represents a Paused event raised by the ContractBlocklessAVS contract.
type ContractBlocklessAVSPaused struct {
	Account         common.Address
	NewPausedStatus *big.Int
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterPaused is a free log retrieval operation binding the contract event 0xab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d.
//
// Solidity: event Paused(address indexed account, uint256 newPausedStatus)
func (_ContractBlocklessAVS *ContractBlocklessAVSFilterer) FilterPaused(opts *bind.FilterOpts, account []common.Address) (*ContractBlocklessAVSPausedIterator, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractBlocklessAVS.contract.FilterLogs(opts, "Paused", accountRule)
	if err != nil {
		return nil, err
	}
	return &ContractBlocklessAVSPausedIterator{contract: _ContractBlocklessAVS.contract, event: "Paused", logs: logs, sub: sub}, nil
}

// WatchPaused is a free log subscription operation binding the contract event 0xab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d.
//
// Solidity: event Paused(address indexed account, uint256 newPausedStatus)
func (_ContractBlocklessAVS *ContractBlocklessAVSFilterer) WatchPaused(opts *bind.WatchOpts, sink chan<- *ContractBlocklessAVSPaused, account []common.Address) (event.Subscription, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractBlocklessAVS.contract.WatchLogs(opts, "Paused", accountRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractBlocklessAVSPaused)
				if err := _ContractBlocklessAVS.contract.UnpackLog(event, "Paused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePaused is a log parse operation binding the contract event 0xab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d.
//
// Solidity: event Paused(address indexed account, uint256 newPausedStatus)
func (_ContractBlocklessAVS *ContractBlocklessAVSFilterer) ParsePaused(log types.Log) (*ContractBlocklessAVSPaused, error) {
	event := new(ContractBlocklessAVSPaused)
	if err := _ContractBlocklessAVS.contract.UnpackLog(event, "Paused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractBlocklessAVSPauserRegistrySetIterator is returned from FilterPauserRegistrySet and is used to iterate over the raw logs and unpacked data for PauserRegistrySet events raised by the ContractBlocklessAVS contract.
type ContractBlocklessAVSPauserRegistrySetIterator struct {
	Event *ContractBlocklessAVSPauserRegistrySet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractBlocklessAVSPauserRegistrySetIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractBlocklessAVSPauserRegistrySet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractBlocklessAVSPauserRegistrySet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractBlocklessAVSPauserRegistrySetIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractBlocklessAVSPauserRegistrySetIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractBlocklessAVSPauserRegistrySet represents a PauserRegistrySet event raised by the ContractBlocklessAVS contract.
type ContractBlocklessAVSPauserRegistrySet struct {
	PauserRegistry    common.Address
	NewPauserRegistry common.Address
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterPauserRegistrySet is a free log retrieval operation binding the contract event 0x6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6.
//
// Solidity: event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)
func (_ContractBlocklessAVS *ContractBlocklessAVSFilterer) FilterPauserRegistrySet(opts *bind.FilterOpts) (*ContractBlocklessAVSPauserRegistrySetIterator, error) {

	logs, sub, err := _ContractBlocklessAVS.contract.FilterLogs(opts, "PauserRegistrySet")
	if err != nil {
		return nil, err
	}
	return &ContractBlocklessAVSPauserRegistrySetIterator{contract: _ContractBlocklessAVS.contract, event: "PauserRegistrySet", logs: logs, sub: sub}, nil
}

// WatchPauserRegistrySet is a free log subscription operation binding the contract event 0x6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6.
//
// Solidity: event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)
func (_ContractBlocklessAVS *ContractBlocklessAVSFilterer) WatchPauserRegistrySet(opts *bind.WatchOpts, sink chan<- *ContractBlocklessAVSPauserRegistrySet) (event.Subscription, error) {

	logs, sub, err := _ContractBlocklessAVS.contract.WatchLogs(opts, "PauserRegistrySet")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractBlocklessAVSPauserRegistrySet)
				if err := _ContractBlocklessAVS.contract.UnpackLog(event, "PauserRegistrySet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePauserRegistrySet is a log parse operation binding the contract event 0x6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6.
//
// Solidity: event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)
func (_ContractBlocklessAVS *ContractBlocklessAVSFilterer) ParsePauserRegistrySet(log types.Log) (*ContractBlocklessAVSPauserRegistrySet, error) {
	event := new(ContractBlocklessAVSPauserRegistrySet)
	if err := _ContractBlocklessAVS.contract.UnpackLog(event, "PauserRegistrySet", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractBlocklessAVSStaleStakesForbiddenUpdateIterator is returned from FilterStaleStakesForbiddenUpdate and is used to iterate over the raw logs and unpacked data for StaleStakesForbiddenUpdate events raised by the ContractBlocklessAVS contract.
type ContractBlocklessAVSStaleStakesForbiddenUpdateIterator struct {
	Event *ContractBlocklessAVSStaleStakesForbiddenUpdate // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractBlocklessAVSStaleStakesForbiddenUpdateIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractBlocklessAVSStaleStakesForbiddenUpdate)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractBlocklessAVSStaleStakesForbiddenUpdate)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractBlocklessAVSStaleStakesForbiddenUpdateIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractBlocklessAVSStaleStakesForbiddenUpdateIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractBlocklessAVSStaleStakesForbiddenUpdate represents a StaleStakesForbiddenUpdate event raised by the ContractBlocklessAVS contract.
type ContractBlocklessAVSStaleStakesForbiddenUpdate struct {
	Value bool
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterStaleStakesForbiddenUpdate is a free log retrieval operation binding the contract event 0x40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc.
//
// Solidity: event StaleStakesForbiddenUpdate(bool value)
func (_ContractBlocklessAVS *ContractBlocklessAVSFilterer) FilterStaleStakesForbiddenUpdate(opts *bind.FilterOpts) (*ContractBlocklessAVSStaleStakesForbiddenUpdateIterator, error) {

	logs, sub, err := _ContractBlocklessAVS.contract.FilterLogs(opts, "StaleStakesForbiddenUpdate")
	if err != nil {
		return nil, err
	}
	return &ContractBlocklessAVSStaleStakesForbiddenUpdateIterator{contract: _ContractBlocklessAVS.contract, event: "StaleStakesForbiddenUpdate", logs: logs, sub: sub}, nil
}

// WatchStaleStakesForbiddenUpdate is a free log subscription operation binding the contract event 0x40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc.
//
// Solidity: event StaleStakesForbiddenUpdate(bool value)
func (_ContractBlocklessAVS *ContractBlocklessAVSFilterer) WatchStaleStakesForbiddenUpdate(opts *bind.WatchOpts, sink chan<- *ContractBlocklessAVSStaleStakesForbiddenUpdate) (event.Subscription, error) {

	logs, sub, err := _ContractBlocklessAVS.contract.WatchLogs(opts, "StaleStakesForbiddenUpdate")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractBlocklessAVSStaleStakesForbiddenUpdate)
				if err := _ContractBlocklessAVS.contract.UnpackLog(event, "StaleStakesForbiddenUpdate", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseStaleStakesForbiddenUpdate is a log parse operation binding the contract event 0x40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc.
//
// Solidity: event StaleStakesForbiddenUpdate(bool value)
func (_ContractBlocklessAVS *ContractBlocklessAVSFilterer) ParseStaleStakesForbiddenUpdate(log types.Log) (*ContractBlocklessAVSStaleStakesForbiddenUpdate, error) {
	event := new(ContractBlocklessAVSStaleStakesForbiddenUpdate)
	if err := _ContractBlocklessAVS.contract.UnpackLog(event, "StaleStakesForbiddenUpdate", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractBlocklessAVSUnpausedIterator is returned from FilterUnpaused and is used to iterate over the raw logs and unpacked data for Unpaused events raised by the ContractBlocklessAVS contract.
type ContractBlocklessAVSUnpausedIterator struct {
	Event *ContractBlocklessAVSUnpaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractBlocklessAVSUnpausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractBlocklessAVSUnpaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractBlocklessAVSUnpaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractBlocklessAVSUnpausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractBlocklessAVSUnpausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractBlocklessAVSUnpaused represents a Unpaused event raised by the ContractBlocklessAVS contract.
type ContractBlocklessAVSUnpaused struct {
	Account         common.Address
	NewPausedStatus *big.Int
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterUnpaused is a free log retrieval operation binding the contract event 0x3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c.
//
// Solidity: event Unpaused(address indexed account, uint256 newPausedStatus)
func (_ContractBlocklessAVS *ContractBlocklessAVSFilterer) FilterUnpaused(opts *bind.FilterOpts, account []common.Address) (*ContractBlocklessAVSUnpausedIterator, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractBlocklessAVS.contract.FilterLogs(opts, "Unpaused", accountRule)
	if err != nil {
		return nil, err
	}
	return &ContractBlocklessAVSUnpausedIterator{contract: _ContractBlocklessAVS.contract, event: "Unpaused", logs: logs, sub: sub}, nil
}

// WatchUnpaused is a free log subscription operation binding the contract event 0x3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c.
//
// Solidity: event Unpaused(address indexed account, uint256 newPausedStatus)
func (_ContractBlocklessAVS *ContractBlocklessAVSFilterer) WatchUnpaused(opts *bind.WatchOpts, sink chan<- *ContractBlocklessAVSUnpaused, account []common.Address) (event.Subscription, error) {

	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}

	logs, sub, err := _ContractBlocklessAVS.contract.WatchLogs(opts, "Unpaused", accountRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractBlocklessAVSUnpaused)
				if err := _ContractBlocklessAVS.contract.UnpackLog(event, "Unpaused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUnpaused is a log parse operation binding the contract event 0x3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c.
//
// Solidity: event Unpaused(address indexed account, uint256 newPausedStatus)
func (_ContractBlocklessAVS *ContractBlocklessAVSFilterer) ParseUnpaused(log types.Log) (*ContractBlocklessAVSUnpaused, error) {
	event := new(ContractBlocklessAVSUnpaused)
	if err := _ContractBlocklessAVS.contract.UnpackLog(event, "Unpaused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
